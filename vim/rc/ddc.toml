[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'denops.vim']
on_event = 'InsertEnter'
hook_source = '''
  inoremap <silent><expr> <C-l> ddc#complete_common_string()
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
        \ "\<TAB>" : ddc#manual_complete()

  call ddc#custom#patch_global(
      \ 'sources', ['around', 'deoppet']
      \ )
  call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'matchers': ['matcher_head'],
      \   'sorters': ['sorter_rank'],
      \   'converters': ['converter_remove_overlap'],
      \ },
      \ 'around': {'mark': 'A'},
      \ 'eskk': {'mark': 'eskk', 'matchers': [], 'sorters': []},
      \ 'necovim': {'mark': 'vim'},
      \ 'deoppet': {'mark': 'dp'},
      \ 'nextword': {
      \   'mark': 'nextword',
      \   'minAutoCompleteLength': 3,
      \   'isVolatile': v:true,
      \ },
      \ 'nvimlsp': {'mark': 'lsp', 'forceCompletionPattern': '\\.|:|->'},
      \ })
  call ddc#custom#patch_filetype(
      \ ['vim', 'toml'], 'sources', ['necovim', 'around']
      \ )
  call ddc#custom#patch_filetype(
      \ ['help', 'markdown', 'gitcommit'], 'sources', ['nextword', 'around']
      \ )
  call ddc#custom#patch_filetype(
      \ ['typescript'], 'sources', ['nvimlsp', 'around', 'deoppet']
      \ )
  call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-zsh'
on_ft = 'zsh'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nextword'
on_ft = ['toml', 'help', 'gitcommit']
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim', 'toml']
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'nvim-lspconfig'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_ft = ['typescript']
on_if = 'has("nvim")'
depends = 'ddc.vim'
hook_source = '''
lua << EOF
require'lspconfig'.denols.setup{}
EOF
'''
