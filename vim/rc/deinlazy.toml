[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = 'CursorHold'
hook_source = '''
  " NOTE: for profile
  "let g:denops#server#deno_args = [
  "    \ '-q',
  "    \ '--no-check',
  "    \ '--unstable',
  "    \ '-A',
  "    \ '--inspect',
  "    \ ]

  " Use background server
  "if has('nvim')
  "  call jobstart([
  "  \   'deno', 'run', '-A', '--no-check',
  "  \   g:dein#plugin.path . '/denops/@denops-private/cli.ts',
  "  \ ], {'detach': v:true})
  "else
  "  call job_start([
  "  \   'deno', 'run', '-A', '--no-check',
  "  \   g:dein#plugin.path . '/denops/@denops-private/cli.ts',
  "  \ ], {'stoponexit': ''})
  "endif
  "let g:denops_server_addr = '127.0.0.1:32123'
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_source = '''
  let g:context_filetype#ignore_patterns = {
      \ 'toml': ['^\s*#\s*'],
      \ }
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
depends = ['ddu.vim', 'ddc.vim']
on_source = ['ddu.vim']
hook_add = '''
  nnoremap <expr><silent> [Space]s
  \ printf('<Cmd>Deol %s -no-start-insert -toggle<CR>',
  \        has('win32') ? 'cmd': 'zsh')
  nnoremap <silent> sD  <Cmd>call deol#kill_editor()<CR>
  nnoremap <silent> <C-t> <Cmd>Ddu -name=deol
  \ -ui-param-split=`has('nvim') ? 'floating' : 'horizontal'`
  \ -ui-param-winRow=1 -ui-param-autoResize
  \ -ui-param-cursorPos=`tabpagenr()-1`
  \ deol<CR>
'''
hook_source = '''
  let g:deol#enable_dir_changed = v:false
  let g:deol#prompt_pattern = '\w*% \?'
  let g:deol#shell_history_path = '~/.zsh-history'
  let g:deol#extra_options = {
      \ 'term_kill': 'kill',
      \ }
  "let g:deol#enable_ddc_completion = v:true
  let g:deol#nvim_server = '~/.cache/nvim/server.pipe'

  call ddu#custom#patch_global({
      \   'sourceParams': {
      \     'deol': {
      \       'command': ['zsh'],
      \     },
      \   }
      \ })

  " Set terminal colors
  if has('nvim')
    let g:terminal_color_0  = '#6c6c6c'
    let g:terminal_color_1  = '#ff6666'
    let g:terminal_color_2  = '#66ff66'
    let g:terminal_color_3  = '#ffd30a'
    let g:terminal_color_4  = '#1e95fd'
    let g:terminal_color_5  = '#ff13ff'
    let g:terminal_color_6  = '#1bc8c8'
    let g:terminal_color_7  = '#c0c0c0'
    let g:terminal_color_8  = '#383838'
    let g:terminal_color_9  = '#ff4444'
    let g:terminal_color_10 = '#44ff44'
    let g:terminal_color_11 = '#ffb30a'
    let g:terminal_color_12 = '#6699ff'
    let g:terminal_color_13 = '#f820ff'
    let g:terminal_color_14 = '#4ae2e2'
    let g:terminal_color_15 = '#ffffff'
  else
    let g:terminal_ansi_colors = [
          \ '#6c6c6c', '#ff6666', '#66ff66', '#ffd30a',
          \ '#1e95fd', '#ff13ff', '#1bc8c8', '#c0c0c0',
          \ '#383838', '#ff4444', '#44ff44', '#ffb30a',
          \ '#6699ff', '#f820ff', '#4ae2e2', '#ffffff',
          \ ]
  endif

  tnoremap <expr><C-t> ddc#manual_complete()
  tnoremap <silent><expr> <Tab> pum#visible() ?
        \ '<Cmd>call pum#map#insert_relative(+1)<CR>' :
        \ '<Tab>'
  tnoremap <silent><expr> <S-Tab> pum#visible() ?
        \ '<Cmd>call pum#map#insert_relative(-1)<CR>' :
        \ '<S-Tab>'
  tnoremap <Down>   <Cmd>call pum#map#select_relative(+1)<CR>
  tnoremap <Up>     <Cmd>call pum#map#select_relative(-1)<CR>
  tnoremap <silent><expr> <C-y>
        \ pum#visible() ? '<Cmd>call pum#map#confirm()<CR>' : '<C-y>'
  tnoremap <silent><expr> <C-e>
        \ pum#visible() ? '<Cmd>call pum#map#cancel()<CR>' : '<C-e>'
'''
[plugins.ftplugin]
deol = '''
  nnoremap <buffer><silent> [Space]gc
  \ <Cmd>call deol#send('git commit')<CR>
  nnoremap <buffer><silent> [Space]gs
  \ <Cmd>call deol#send('git status')<CR>
  nnoremap <buffer><silent> [Space]gA
  \ <Cmd>call deol#send('git commit --amend')<CR>
  nmap <buffer> e <Plug>(deol_edit)
  tmap <buffer> <CR> <Plug>(deol_execute_line)

  call ddc#custom#patch_buffer('sourceOptions', {
      \ '_': {
      \   'converters': [],
      \ },
      \ })
'''
zsh = '''
  nnoremap <buffer><silent> [Space]gc
  \ <Cmd>call deol#send('git commit')<CR>
  nnoremap <buffer><silent> [Space]gs
  \ <Cmd>call deol#send('git status')<CR>
  nnoremap <buffer><silent> [Space]gA
  \ <Cmd>call deol#send('git commit --amend')<CR>
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = ['ddu.vim']
hook_add = '''
  nnoremap <silent> se <Cmd>Ddu junkfile -volatile<CR>
'''

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_add = '''
  let g:vinarise_enable_auto_detect = v:true
  let g:vinarise_guifont = 'Courier\ 10\ Pitch:h14'
'''

[[plugins]]
repo = 'Shougo/ddx.vim'

[[plugins]]
repo = 'Shougo/ddx-commands.vim'
depends = 'ddx.vim'
on_cmd = 'Ddx'

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_ft = ['qf']
[plugins.ftplugin]
qf = '''
  nnoremap <buffer> r <Cmd>Qfreplace<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'
depends = 'open-browser.vim'

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap J <Plug>(jplus)
'''

# [[plugins]]
# repo = 'katono/rogue.vim'

[[plugins]]
repo = 'lambdalisue/vim-findent'

[[plugins]]
repo = 'tweekmonster/helpful.vim'
on_cmd = 'HelpfulVersion'

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'

[[plugins]]
repo = 'machakann/vim-vimhelplint'
on_ft = 'help'
[plugins.ftplugin]
help = '''
  nnoremap <silent><buffer> ,r  <Cmd>VimhelpLint!<CR>
'''

[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'
hook_source = '''
  let g:goimports_simplify = v:true
'''

[[plugins]]
repo = 'dag/vim2hs'
on_ft = 'haskell'
hook_source = '''
  let g:haskell_conceal = v:false
'''

[[plugins]]
repo = 'hrsh7th/vim-eft'
hook_source = '''
  let g:eft_ignorecase = v:true
'''
hook_add = '''
  nmap ;; <Plug>(eft-repeat)
  xmap ;; <Plug>(eft-repeat)

  nmap f <Plug>(eft-f)
  xmap f <Plug>(eft-f)
  omap f <Plug>(eft-f)
'''
on_map = {n = '<Plug>', x = '<Plug>', o = '<Plug>'}

#[[plugins]]
#repo = 'teal-language/vim-teal'
#on_ft = 'teal'

[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'
on_ft = 'markdown'

[[plugins]]
repo = 'github/copilot.vim'
on_cmd = 'Copilot'
hook_source = '''
  let g:copilot_enabled = v:false
  let g:copilot_no_maps = v:true
  let g:copilot_node_command = '/snap/bin/node'
  let g:copilot_hide_during_completion = 0
  imap <script><silent><nowait><expr> <C-g> copilot#Accept()
'''

[[plugins]]
repo = 'Shougo/qselect.vim'

[[plugins]]
repo = 'skanehira/denops-silicon.vim'

[[plugins]]
repo = '4513ECHO/vim-readme-viewer'
on_source = ['ddu.vim']
hook_add = '''
  let g:readme_viewer#plugin_manager = 'dein.vim'
  nnoremap <silent> sr <Cmd>Ddu readme_viewer<CR>
'''
on_cmd = 'DeinOpen'
