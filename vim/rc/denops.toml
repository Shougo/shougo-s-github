[[plugins]]
repo = 'vim-denops/denops.vim'
hook_source = '''
  let g:denops#debug = v:false

  let g:denops#server#deno_args = [
      \   '-q',
      \   '-A',
      \ ]

  " NOTE: for Deno KV storage
  let g:denops#server#deno_args += ['--unstable-kv']

  " NOTE: for profile
  "let g:denops#server#deno_args += ['--inspect']

  " NOTE: for deno-pty-ffi
  " https://github.com/sigmaSd/deno-pty-ffi
  let g:denops#server#deno_args += ['--unstable-ffi']

  "let g:denops_server_addr = '127.0.0.1:32123'
'''

[[plugins]]
repo = 'vim-denops/denops-startup-recorder.vim'
on_source = 'denops.vim'

[[plugins]]
repo = 'lambdalisue/kensaku.vim'
depends = 'denops.vim'
denops_wait = false

[[plugins]]
repo = 'vim-skk/skkeleton'
on_map = { ict = '<Plug>(skkeleton-' }
#on_event = 'InsertEnter'
denops_wait = false
hooks_file = '$BASE_DIR/skkeleton.vim'

## NOTE: Disable lspoints.  It does not support denols imports feature.
#[[plugins]]
#repo = 'kuuote/lspoints'
#on_event = 'BufRead'
#depends = 'denops.vim'
#hook_source = '''
#call lspoints#load_extensions([
#        \   'nvim_diagnostics',
#        \ ])
#
#function s:attach_ls() abort
#  const ft = &l:filetype
#  if ft =~# '^typescript' && 'deno'->executable()
#    " Deno lsp
#
#    " Check "package.json" exists
#    if findfile('package.json', '.;') !=# ''
#      return
#    endif
#
#    call lspoints#attach('denols', #{
#            \   cmd: ['deno', 'lsp'],
#            \   initializationOptions: #{
#            \     enable: v:true,
#            \     lint: v:true,
#            \     documentPreloadLimit: 10,
#            \     unstable: v:true,
#            \     suggest: #{
#            \       autoImports: v:true,
#            \     },
#            \   },
#            \ })
#
#    " Use lspoints for nvim-lsp source
#    call ddc#custom#patch_buffer('sourceParams', #{
#        \   lsp: #{
#        \     lspEngine: 'lspoints',
#        \   }
#        \ })
#  elseif ft ==# 'css' && 'tailwindcss-language-server'->executable()
#    " Tailwind CSS
#
#    " Check tailwindcss file exists
#    if findfile('tailwind.config.js', '.;') !=# ''
#      return
#    endif
#
#    call lspoints#attach('tailwindcss-language-server', #{
#            \   cmd: ['tailwindcss-language-server', '--stdio'],
#            \   initializationOptions: #{
#            \   },
#            \ })
#  endif
#endfunction
#
#call s:attach_ls()
#autocmd MyAutoCmd FileType * call s:attach_ls()
#'''
