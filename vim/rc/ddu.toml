[[plugins]]
repo = 'Shougo/ddu.vim'
depends = 'denops.vim'
on_source = 'denops.vim'
hook_add = '''
  nnoremap s<Space> <Cmd>Ddu
  \ -name=files file_rec
  \ -source-option-path='`fnamemodify($MYVIMRC, ':h').'/rc'`'<CR>
  nnoremap ss
  \ <Cmd>Ddu -name=files file_point file_old
  \ `finddir('.git', ';') != '' ? 'file_external' : 'file_rec'`
  \ -sync -ui-param-displaySourceName=short<CR>
  nnoremap / <Cmd>Ddu
  \ -name=search line
  \ -ui-param-startFilter<CR>
  nnoremap * <Cmd>Ddu
  \ -name=search line -input=`expand('<cword>')`
  \ -ui-param-startFilter=v:false<CR>
  nnoremap ;g <Cmd>Ddu
  \ -name=search rg
  \ -ui-param-ignoreEmpty
  \ -source-param-input=`input('Pattern: ')`<CR>
  nnoremap n <Cmd>Ddu
  \ -name=search -resume
  \ -ui-param-startFilter=v:false<CR>
  nnoremap ;r <Cmd>Ddu
  \ -buffer-name=register register
  \ -ui-param-autoResize<CR>
  xnoremap <expr> ;r (mode() ==# 'V' ? '"_R<Esc>' : '"_d') .
  \ '<Cmd>Ddu -buffer-name=register register
  \  -source-option-defaultAction=insert -ui-param-autoResize<CR>'
  nnoremap sg <Cmd>Ddu
  \ dein<CR>
'''
hook_source = '''
call ddu#custom#alias('source', 'file_rg', 'file_external')

call ddu#custom#patch_global({
    \   'ui': 'ff',
    \   'sourceOptions': {
    \     '_': {
    \       'ignoreCase': v:true,
    \       'matchers': ['matcher_substring'],
    \     },
    \     'file_old': {
    \       'matchers': [
    \         'matcher_substring', 'matcher_relative', 'matcher_hidden',
    \       ],
    \     },
    \     'file_external': {
    \       'matchers': [
    \         'matcher_substring', 'matcher_hidden',
    \       ],
    \     },
    \     'file_rec': {
    \       'matchers': [
    \         'matcher_substring', 'matcher_hidden',
    \       ],
    \     },
    \     'dein': {
    \       'defaultAction': 'cd',
    \     },
    \   },
    \   'sourceParams': {
    \     'file_external': {
    \       'cmd': ['git', 'ls-files', '-co', '--exclude-standard'],
    \     },
    \   },
    \   'uiParams': {
    \     'ff': {
    \       'filterSplitDirection': 'floating',
    \     }
    \   },
    \   'kindOptions': {
    \     'file': {
    \       'defaultAction': 'open',
    \     },
    \     'word': {
    \       'defaultAction': 'append',
    \     },
    \     'deol': {
    \       'defaultAction': 'switch',
    \     },
    \     'action': {
    \       'defaultAction': 'do',
    \     },
    \   },
    \   'actionOptions': {
    \     'narrow': {
    \       'quit': v:false,
    \     },
    \   },
    \ })
call ddu#custom#patch_local('files', {
    \   'uiParams': {
    \     'ff': {
    \       'split': has('nvim') ? 'floating' : 'horizontal',
    \     }
    \   },
    \ })

call ddu#custom#patch_global({
    \   'sourceParams': {
    \     'file_rg': {
    \       'cmd': ['rg', '--files', '--glob', '!.git',
    \               '--color', 'never', '--no-messages'],
    \       'updateItems': 50000,
    \     },
    \     'rg': {
    \       'args': [
    \         '--ignore-case', '--column', '--no-heading', '--color', 'never',
    \       ],
    \     },
    \   }
    \ })
call ddu#custom#patch_global({
    \   'filterParams': {
    \     'matcher_substring': {
    \       'highlightMatched': 'Search',
    \     },
    \   }
    \ })

"call ddu#custom#action('kind', 'file', 'test',
"    \ { args -> execute('let g:foo = 1') })
"call ddu#custom#action('source', 'file_old', 'test2',
"    \ { args -> execute('let g:bar = 1') })
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
depends = 'ddu.vim'
on_cmd = 'Ddu'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-ff = '''
nnoremap <buffer> <CR>
\ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
nnoremap <buffer> <Space>
\ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
nnoremap <buffer> i
\ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
nnoremap <buffer> <C-l>
\ <Cmd>call ddu#ui#ff#do_action('refreshItems')<CR>
nnoremap <buffer> p
\ <Cmd>call ddu#ui#ff#do_action('preview')<CR>
nnoremap <buffer> q
\ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
nnoremap <buffer> a
\ <Cmd>call ddu#ui#ff#do_action('chooseAction')<CR>
nnoremap <buffer> c
\ <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'cd'})<CR>
nnoremap <buffer> d
\ <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'delete'})<CR>
nnoremap <buffer> e
\ <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'edit'})<CR>
nnoremap <buffer> E
\ <Cmd>call ddu#ui#ff#do_action('itemAction',
\ {'params': eval(input('params: '))})<CR>
nnoremap <buffer> v
\ <Cmd>call ddu#ui#ff#do_action('itemAction',
\ {'name': 'open', 'params': {'command': 'vsplit'}})<CR>
nnoremap <buffer> N
\ <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'new'})<CR>
nnoremap <buffer> r
\ <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'quickfix'})<CR>
nnoremap <buffer> u
\ <Cmd>call ddu#ui#ff#do_action('updateOptions', {
\   'sourceOptions': {
\     '_': {
\       'matchers': [],
\     },
\   },
\ })<CR>
'''
ddu-ff-filter = '''
inoremap <buffer> <CR>
\ <Esc><Cmd>close<CR>
nnoremap <buffer> <CR>
\ <Cmd>close<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-filer = '''
nnoremap <buffer> <Space>
\ <Cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>
nnoremap <buffer> q
\ <Cmd>call ddu#ui#filer#do_action('quit')<CR>
nnoremap <buffer> o
\ <Cmd>call ddu#ui#filer#do_action('expandItem')<CR>
nnoremap <buffer> O
\ <Cmd>call ddu#ui#filer#do_action('collapseItem')<CR>
nnoremap <buffer> d
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ {'name': 'delete'})<CR>
nnoremap <buffer> x
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ {'name': 'executeSystem'})<CR>
nnoremap <buffer> K
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ {'name': 'newDirectory'})<CR>
nnoremap <buffer> N
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ {'name': 'newFile'})<CR>
nnoremap <buffer> ~
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ {'name': 'narrow', 'params': {'path': expand('~')}})<CR>
nnoremap <buffer> h
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ {'name': 'narrow', 'params': {'path': ".."}})<CR>
nnoremap <buffer><expr> <CR>
\ ddu#ui#filer#is_directory() ?
\ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow'})<CR>" :
\ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open'})<CR>"
'''

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_old'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_point'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-register'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-action'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-command_history'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_relative'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_hidden'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-word'
on_source = 'ddu.vim'
